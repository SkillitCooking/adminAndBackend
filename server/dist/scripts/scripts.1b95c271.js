"use strict";angular.module("SkillitAdminApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","restangular"]).constant("_",window._).config(["$routeProvider","RestangularProvider",function(a,b){a.when("/",{templateUrl:"views/recipes.html",controller:"RecipeCtrl",controllerAs:"recipe"}).when("/recipes",{templateUrl:"views/recipes.html",controller:"RecipeCtrl",controllerAs:"recipe"}).when("/ingredients",{templateUrl:"views/ingredients.html",controller:"IngredientCtrl",controllerAs:"ingredient"}).when("/dishes",{templateUrl:"views/dishes.html",controller:"DishesCtrl",controllerAs:"dishes"}).when("/seasoningprofiles",{templateUrl:"views/seasoningprofiles.html",controller:"SeasoningprofilesCtrl",controllerAs:"seasoningprofiles"}).when("/viewAllRecipes",{templateUrl:"views/viewallrecipes.html",controller:"ViewallrecipesCtrl",controllerAs:"viewAllRecipes"}).when("/itemCollections",{templateUrl:"views/itemcollections.html",controller:"ItemcollectionsCtrl",controllerAs:"itemCollections"}).when("/glossaryEntries",{templateUrl:"views/glossaryentries.html",controller:"GlossaryentriesCtrl",controllerAs:"glossaryEntries"}).when("/trainingVideos",{templateUrl:"views/trainingvideos.html",controller:"TrainingvideosCtrl",controllerAs:"trainingVideos"}).when("/howToShopEntry",{templateUrl:"views/howtoshopentry.html",controller:"HowtoshopentryCtrl",controllerAs:"howToShopEntry"}).when("/dailyTips",{templateUrl:"views/dailytips.html",controller:"DailytipsCtrl",controllerAs:"dailyTips"}).otherwise({redirectTo:"/"}),b.setBaseUrl("/api")}]),angular.module("SkillitAdminApp").controller("RecipeCtrl",["$scope","recipeService","seasoningService","ingredientService","dishService","_",function(a,b,c,d,e,f){a.integerval=/^\d*$/,c.getAllSeasonings().then(function(b){a.seasoningProfiles=b.data},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),d.getAllIngredients().then(function(b){a.ingredients=b},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),e.getAllDishes().then(function(b){a.dishes=b},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.stepTypes=["Bake","Boil","BringToBoil","Cook","Custom","Cut","Dry","Heat","Place","PreheatOven","Sautee","Season","SlowCook","Steam","EquipmentPrep","Stir"],a.recipeTypes=["AlaCarte","BYO","Full"],a.recipeCategories=["Sautee","Scramble","Roast","Pasta","Hash","Rice","Quinoa"],a.cookingMethods=["Bake","Sautee","Boil","Steam","SlowCook"],a.selectedIngredientForms=[],a.constructingStep={},a.constructingStep.stepInputs={},a.ingredientList={ingredientTypes:[],equipmentNeeded:[]},a.stepList=[],a.setSelectedIngredientForms=function(b){var c;c=b&&b.ingredientForms?b.ingredientForms.length:0,a.selectedIngredientForms=new Array(c)},a.addCookingMethod=function(){a.recipe.otherCookingMethods||(a.recipe.otherCookingMethods=[]),-1===a.recipe.otherCookingMethods.indexOf(a.otherCookingMethod)&&a.recipe.otherCookingMethods.push(a.otherCookingMethod)},a.removeCookingMethod=function(b){a.recipe.otherCookingMethods.splice(b,1)},a.isAFormSelected=function(){if(0===a.selectedIngredientForms.length)return!1;for(var b=a.selectedIngredientForms.length-1;b>=0;b--)if(a.selectedIngredientForms[b])return!0;return!1},a.ingredientCanBeAdded=function(b){for(var c,d=a.ingredientList.ingredientTypes,e=d.length-1;e>=0;e--){c=d[e].ingredients;for(var f=c.length-1;f>=0;f--)if(c[f].name===b.name)return!1}return!0},a.addTypeIngredient=function(b,c){if(a.ingredientCanBeAdded(c)){for(var d=[],e=c.ingredientForms.length-1;e>=0;e--)a.selectedIngredientForms[e]&&d.push(c.ingredientForms[e]);var f={name:c.name,ingredientForms:d,ingredientTips:c.ingredientTips,inputCategory:c.inputCategory};a.ingredientList.ingredientTypes[b].ingredients||(a.ingredientList.ingredientTypes[b].ingredients=[]),a.ingredientList.ingredientTypes[b].ingredients.push(f)}},a.removeTypeIngredient=function(a,b){a.ingredients.splice(b,1)},a.removeIngredientType=function(b){a.ingredientList.ingredientTypes.splice(b,1)},a.addIngredientType=function(){a.ingredientList.ingredientTypes||(a.ingredientList.ingredientTypes=[]),a.ingredientList.ingredientTypes.push({typeName:"",displayName:"",ingredients:[],minNeeded:""})},a.addDish=function(){a.ingredientList.equipmentNeeded||(a.ingredientList.equipmentNeeded=[]),-1===a.ingredientList.equipmentNeeded.indexOf(a.typeDish)&&a.ingredientList.equipmentNeeded.push(a.typeDish)},a.removeDish=function(b){a.ingredientList.equipmentNeeded.splice(b,1)},a.addStep=function(){if(!a.squishedRecipeName){var b=a.recipe.name.split(" ");a.squishedRecipeName=b.join("")}a.constructingStep.stepId=a.squishedRecipeName+f.uniqueId(a.constructingStep.stepType),a.constructingStep.productKeys=[a.constructingStep.productName],a.constructingStep.productName=void 0,a.stepList.push(a.constructingStep),a.constructingStep={},a.constructingStep.stepInputs={}},a.removeStep=function(){a.stepList=a.recipe.stepList=f.dropRight(a.stepList)},a.recipeSanityCheck=function(){return a.recipe.stepList&&0!==a.recipe.stepList.length&&a.recipe.ingredientList&&a.recipe.ingredientList.ingredientTypes&&0!==a.recipe.ingredientList.ingredientTypes.length&&a.recipe.ingredientList.equipmentNeeded?!0:!1},a.reset=function(){a.constructingStep=angular.copy({}),a.stepList=angular.copy([]),a.ingredientList=angular.copy({}),a.recipe=angular.copy({}),a.recipeForm.$setPristine(),a.recipeForm.$setUntouched()},a.save=function(){a.recipe.ingredientList=a.ingredientList,a.recipe.stepList=a.stepList,a.recipe.canAddSeasoningProfile||(a.recipe.canAddSeasoningProfile=!1),a.getGlobalCookTimes(),b.addNewRecipe({recipe:{name:a.recipe.name,description:a.recipe.description,recipeType:a.recipe.recipeType,recipeCategory:a.recipe.recipeCategory,ingredientList:a.recipe.ingredientList,stepList:a.recipe.stepList,primaryCookingMethod:a.recipe.primaryCookingMethod,otherCookingMethods:a.recipe.otherCookingMethods,canAddSeasoningProfile:a.recipe.canAddSeasoningProfile,defaultSeasoningProfile:a.recipe.defaultSeasoningProfile,primaryIngredientType:a.recipe.primaryIngredientType,mainPictureURL:a.recipe.mainPictureURL,mainVideoURL:a.recipe.mainVideoURL,prepTime:a.recipe.prepTime,totalTime:a.recipe.totalTime,hasBeenRecipeOfTheDay:!1,datesUsedAsRecipeOfTheDay:[],isRecipeOfTheDay:!1}}).then(function(a){var b="Success! Recipe "+a.name+" was saved!";alert(b)},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.reset()},a.isPrepStep=function(a){return["BringToBoil","Custom","Cut","Dry","Heat","Place","PreheatOven","Season","EquipmentPrep","Stir"].includes(a)},a.getGlobalCookTimes=function(){a.recipe.prepTime=0,a.recipe.totalTime=0;for(var b=a.recipe.stepList.length-1;b>=0;b--)a.recipe.totalTime+=parseInt(a.recipe.stepList[b].stepDuration,10),a.isPrepStep(a.recipe.stepList[b].stepType)&&(a.recipe.prepTime+=parseInt(a.recipe.stepList[b].stepDuration,10))},a.preview=function(){a.recipe.ingredientList=a.ingredientList,a.recipe.stepList=a.stepList}}]),angular.module("SkillitAdminApp").controller("IngredientCtrl",["$scope","ingredientService",function(a,b){a.integerval=/^\d*$/,b.getAllIngredients().then(function(b){a.ingredients=b},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.inForms=[],a.inputCategories=["Protein","Vegetables","Starches","Other"],a.cookingMethods=["Bake","Sautee","Boil","Steam","SlowCook"],a.addCookingTime=function(a){a.cookingTimes.push({cookingMethod:"",minTime:"",maxTime:"",timesArePerSide:!1})},a.addIngredientForm=function(){a.inForms.push({name:"",cookingTimes:[{cookingMethod:"",minTime:"",maxTime:"",timesArePerSide:!1}]})},a.removeCookingTime=function(a,b){a.cookingTimes.splice(b,1)},a.removeIngredientForm=function(b){a.inForms.splice(b,1)},a.ingredientTips=[],a.stepTypes=["Bake","Boil","BringToBoil","Custom","Cut","Dry","Heat","Place","PreheatOven","Sautee","Season","SlowCook","Steam","EquipmentPrep","Stir"],a.subTypes=[],a.setSubTypes=function(b,c){switch(b){case"Cut":a.subTypes[c]=["Cut","Chop","Dice","Slice","Mince","all"];break;case"Dry":a.subTypes[c]=["Pat","Rub","all"];break;case"EquipmentPrep":a.subTypes[c]=["Grease","Line","all"];break;case"Stir":a.subTypes[c]=["Stir","Flip","all"];break;default:a.subTypes[c]=["all"]}},a.removeTip=function(b){a.ingredientTips.splice(b,1)},a.addIngredientTip=function(){a.ingredientTips.push({stepType:""})},a.ingredientSanityCheck=function(){return a.ingredient.ingredientForms?!0:!1},a.reset=function(){a.inForms=angular.copy([]),a.ingredientTips=angular.copy([]),a.ingredient=angular.copy({}),a.ingredientForm.nameInput.$setUntouched()},a.preview=function(){a.ingredient.ingredientForms=a.inForms,a.ingredient.ingredientTips=a.ingredientTips},a.save=function(){a.ingredient.ingredientForms=a.inForms,a.ingredient.ingredientTips=a.ingredientTips,console.log(a.ingredient),b.addNewIngredient({ingredient:{name:a.ingredient.name,ingredientForms:a.ingredient.ingredientForms,ingredientTips:a.ingredient.ingredientTips,inputCategory:a.ingredient.inputCategory}}).then(function(b){a.ingredients.push(b)},function(a){console.log("Server Error: ",a.message),console.log(a),alert("Server Error: "+a.message)}),a.reset()}}]),angular.module("SkillitAdminApp").controller("DishesCtrl",["$scope","dishService",function(a,b){a.integerval=/^\d*$/,b.getAllDishes().then(function(b){a.dishes=b},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.reset=function(){a.dish=angular.copy({}),a.dishForm.nameInput.$setUntouched(),a.dishForm.capacityInput.$setUntouched()},a.save=function(){b.addNewDish({dish:{name:a.dish.name,ingredientCapacity:a.dish.ingredientCapacity}}).then(function(b){a.dishes.push(b)},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.dish=angular.copy({}),a.dishForm.nameInput.$setUntouched(),a.dishForm.capacityInput.$setUntouched()}}]),angular.module("SkillitAdminApp").controller("SeasoningprofilesCtrl",["$scope","seasoningService",function(a,b){b.getAllSeasonings().then(function(b){a.profiles=b.data},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.reset=function(){a.seasoningProfile=angular.copy({}),a.seasoningForm.nameInput.$setUntouched(),a.seasoningForm.spiceInput.$setUntouched()},a.save=function(){for(var c=a.seasoningProfile.spices.split(","),d=c.length-1;d>=0;d--)c[d]=c[d].trim();b.addNewSeasoning({seasoningProfile:{name:a.seasoningProfile.name,spices:c}}).then(function(b){a.profiles.push(b)},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.seasoningProfile=angular.copy({}),a.seasoningForm.nameInput.$setUntouched(),a.seasoningForm.spiceInput.$setUntouched()}}]),angular.module("SkillitAdminApp").factory("seasoningService",["Restangular",function(a){var b=a.all("seasoningProfiles");return{getAllSeasonings:function(){return b.customGET("/")},addNewSeasoning:function(a){return b.post(a)}}}]),angular.module("SkillitAdminApp").factory("dishService",["Restangular",function(a){var b=a.all("dishes");return{getAllDishes:function(){return b.getList()},addNewDish:function(a){return b.post(a)}}}]),angular.module("SkillitAdminApp").factory("ingredientService",["Restangular",function(a){var b=a.all("ingredients");return{getAllIngredients:function(){return b.getList()},addNewIngredient:function(a){return b.post(a)}}}]),angular.module("SkillitAdminApp").factory("recipeService",["Restangular",function(a){var b=a.all("recipes");return{getAllRecipes:function(){return b.getList()},addNewRecipe:function(a){return b.post(a)}}}]),angular.module("SkillitAdminApp").controller("ViewallrecipesCtrl",["$scope","recipeService",function(a,b){b.getAllRecipes().then(function(b){a.recipes=b,a.isExpandedArr=[],a.isExpandedArr.fill(!1)},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.toggleRecipeExpansion=function(b){a.isExpandedArr[b]=!a.isExpandedArr[b]}}]),angular.module("SkillitAdminApp").directive("cutStepInput",function(){return{templateUrl:"views/cutstepinput.html",scope:!0,transclude:!1,restrict:"E",link:function(a,b,c){a.showExampleText=!1,a.integerval=/^\d*$/,a.tipAdded=!1,a.actionTypes=["Cut","Chop","Dice","Slice","Mince"],a.constructingStep.stepSpecifics=[{propName:"actionType",val:""},{propName:"actionModifier",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("stepInputForm",function(){return{templateUrl:"views/stepinputform.html",restrict:"E",scope:{step:"=constructingStep",stepInputName:"@inputName",isMultiple:"@isMultiple",ingredientList:"<ingredientList",stepList:"=stepList"},transclude:!1,link:function(a,b,c){a.sourceTypes=["EquipmentList","StepProduct","IngredientList"],a.showStepId=function(){return a.step.stepInputs[a.stepInputName]&&a.step.stepInputs[a.stepInputName].sourceType&&"StepProduct"===a.step.stepInputs[a.stepInputName].sourceType?!0:!1},a.showStepIdMultiple=function(b){return a.sourceIdStep||(a.sourceIdStep=[]),b&&b.sourceType&&"StepProduct"===b.sourceType?!0:!1},a.getSourceIdSelectName=function(a,b){return"Step "+b+" => a "+a.stepType+" step "},a.registerSourceId=function(b){a.step.stepInputs[a.stepInputName].sourceId=b.stepId},a.registerSourceIdMultiple=function(a,b,c){a.sourceId=c[b].stepId},a.removeInput=function(b){a.step.stepInputs[a.stepInputName].splice(b,1)},a.addInput=function(){a.step.stepInputs[a.stepInputName]||(a.step.stepInputs[a.stepInputName]=[]),a.step.stepInputs[a.stepInputName].push({sourceType:"",sourceId:"",key:"",inputName:a.stepInputName})},a.getProductKeys=function(a){return a?a.productKeys?a.productKeys:[a.productName]:void 0}}}}),angular.module("SkillitAdminApp").directive("cutStepItem",function(){return{templateUrl:"views/cutstepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("bakeStepInput",function(){return{templateUrl:"views/bakestepinput.html",restrict:"E",transclude:!1,scope:!0,link:function(a,b,c){a.integerval=/^\d*$/,a.auxiliaryStepTypeNames=[],a.constructingStep.stepSpecifics=[{propName:"bakingTime",val:""}],a.showExampleText=!1,a.tipAdded=!1,a.removeAuxStep=function(b){a.constructingStep.auxiliarySteps.splice(b,1)},a.addAuxStep=function(){a.constructingStep.auxiliarySteps||(a.constructingStep.auxiliarySteps=[]),a.constructingStep.auxiliarySteps.push({stepSpecifics:[{propName:"whenToStir",val:""},{propName:"stirType",val:""}]})},a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("stirStepInput",function(){return{templateUrl:"views/stirstepinput.html",restrict:"E",transclude:!1,scope:{isAuxiliaryStep:"@isAuxStep",constructingStep:"=",ingredientList:"<",stepList:"<",auxStepArrIndex:"="},link:function(a,b,c){a.showExampleText=!1,a.integerval=/^\d*$/,a.stirTypes=["Stir","Flip"],a.tipAdded=!1,a.auxStepArrIndex&&(a.auxStepArrIndex=parseInt(a.auxStepArrIndex,10)),"false"===a.isAuxiliaryStep&&(a.constructingStep.stepSpecifics=[{propName:"whenToStir",val:""},{propName:"stirType",val:""}]),a.isAuxDictionary=function(a){switch(a){case"Bake":return!0;case"Sautee":return!1;default:return!1}},a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("stirStepItem",function(){return{templateUrl:"views/stirstepitem.html",restrict:"E",transclude:!1,scope:!1,link:function(a,b,c){}}}),angular.module("SkillitAdminApp").directive("bakeStepItem",function(){return{templateUrl:"views/bakestepitem.html",restrict:"E",transclude:!1,scope:!1}}),angular.module("SkillitAdminApp").directive("bringToBoilStepInput",function(){return{templateUrl:"views/bringtoboilstepinput.html",restrict:"E",transclude:!1,scope:!0,link:function(a,b,c){a.integerval=/^\d*$/,a.tipAdded=!1,a.showExampleText=!1,a.constructingStep.stepSpecifics=[{propName:"waterAmount",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("bringToBoilStepItem",function(){return{templateUrl:"views/bringtoboilstepitem.html",restrict:"E",transclude:!1,scope:!1}}),angular.module("SkillitAdminApp").directive("dryStepInput",function(){return{templateUrl:"views/drystepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.dryMethods=["Pat","Rub"],a.tipAdded=!1,a.showExampleText=!1,a.constructingStep.stepSpecifics=[{propName:"dryMethod",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("dryStepItem",function(){return{templateUrl:"views/drystepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("heatStepInput",function(){return{templateUrl:"views/heatstepinput.html",restrict:"E",transclude:!1,scope:!0,link:function(a,b,c){a.integerval=/^\d*$/,a.tipAdded=!1,a.showExampleText=!1,a.constructingStep.stepSpecifics=[{propName:"heatsOil",val:!1},{propName:"heatSetting",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("heatStepItem",function(){return{templateUrl:"views/heatstepitem.html",restrict:"E",transclude:!1,scope:!1}}),angular.module("SkillitAdminApp").directive("placeStepInput",function(){return{templateUrl:"views/placestepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.showExampleText=!1,a.tipAdded=!1,a.placeTypes=["Place","Add","Combine","Mix"],a.constructingStep.stepSpecifics=[{propName:"placeModifier",val:""},{propName:"placeType",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("placeStepItem",function(){return{templateUrl:"views/placestepitem.html",restrict:"E",transclude:!1,scope:!1}}),angular.module("SkillitAdminApp").directive("preheatOvenStepInput",function(){return{templateUrl:"views/preheatovenstepinput.html",restrict:"E",transclude:!1,scope:!0,link:function(a,b,c){a.integerval=/^\d*$/,a.tipAdded=!1,a.showExampleText=!1,a.constructingStep.stepSpecifics=[{propName:"ovenTemperature",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("preheatOvenStepItem",function(){return{templateUrl:"views/preheatovenstepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("sauteeStepInput",function(){return{templateUrl:"views/sauteestepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.tipAdded=!1,a.showExampleText=!1,a.auxStepAdded=!1,a.constructingStep.stepSpecifics=[{propName:"sauteeDuration",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0},a.addAuxStep=function(){a.auxStepAdded=!a.auxStepAdded,a.constructingStep.auxiliarySteps=[{stepSpecifics:[{propName:"whenToStir",val:""},{propName:"stirType",val:""}]}]},a.removeAuxStep=function(){a.auxStepAdded=!a.auxStepAdded,a.constructingStep.auxiliarySteps=[{stepSpecifics:[{propName:"whenToStir",val:""},{propName:"stirType",val:""}]}]}}}}),angular.module("SkillitAdminApp").directive("sauteeStepItem",function(){return{templateUrl:"views/sauteestepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("seasonStepInput",function(){return{templateUrl:"views/seasonstepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.showExampleText=!1,a.tipAdded=!1,a.constructingStep.stepSpecifics=[{propName:"isOil",val:!1},{propName:"isSeason",val:!1}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("seasonStepItem",function(){return{templateUrl:"views/seasonstepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("slowCookStepInput",function(){return{templateUrl:"views/slowcookstepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.showExampleText=!1,a.tipAdded=!1,a.constructingStep.stepSpecifics=[{propName:"slowCookDuration",val:""},{propName:"tempSetting",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("slowCookStepItem",function(){return{templateUrl:"views/slowcookstepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("equipmentPrepStepInput",function(){return{templateUrl:"views/equipmentprepstepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.showExampleText=!1,a.tipAdded=!1,a.prepActionTypes=["Grease","Line"],a.constructingStep.stepSpecifics=[{propName:"prepActionType",val:""},{propName:"prepModifier",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("equipmentPrepStepItem",function(){return{templateUrl:"views/equipmentprepstepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("steamStepInput",function(){return{templateUrl:"views/steamstepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.showExampleText=!1,a.tipAdded=!1,a.constructingStep.stepSpecifics=[{propName:"steamingDuration",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("steamStepItem",function(){return{templateUrl:"views/steamstepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("boilStepInput",function(){return{templateUrl:"views/boilstepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.showExampleText=!1,a.tipAdded=!1,a.constructingStep.stepSpecifics=[{propName:"cookAccordingToInstructions",val:!1},{propName:"boilingDuration",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("boilStepItem",function(){return{templateUrl:"views/boilstepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("customStepInput",function(){return{templateUrl:"views/customstepinput.html",restrict:"E",scope:!0,transclude:!1,link:function(a,b,c){a.integerval=/^\d*$/,a.tipAdded=!1,a.constructingStep.stepSpecifics=[{propName:"customStepText",val:""}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").directive("customStepItem",function(){return{templateUrl:"views/customstepitem.html",restrict:"E",scope:!1,transclude:!1}}),angular.module("SkillitAdminApp").directive("cookstepitem",function(){return{templateUrl:"views/cookstepitem.html",scope:!1,transclude:!1,restrict:"E"}}),angular.module("SkillitAdminApp").directive("cookStepInput",function(){return{templateUrl:"views/cookstepinput.html",scope:!0,transclude:!1,restrict:"E",link:function(a,b,c){a.integerval=/^\d*$/,a.tipAdded=!1,a.showExampleText=!1,a.cookTypes=["Cook"],a.constructingStep.stepSpecifics=[{propName:"cookType",val:""},{propName:"cookDuration",val:""},{propName:"cookAccordingToInstructions",val:!1}],a.addTip=function(){a.tipAdded=!a.tipAdded},a.removeTip=function(){a.tipAdded=!a.tipAdded,a.constructingStep.stepTip=void 0}}}}),angular.module("SkillitAdminApp").controller("ItemcollectionsCtrl",["$scope","itemCollectionService",function(a,b){a.itemCollection={},a.itemTypes=["dailyTip","trainingVideo","howToShop","glossary"],a.reset=function(){a.itemCollection=angular.copy({}),a.itemCollectionsForm.$setPristine(),a.itemCollectionsForm.$setUntouched()},a.save=function(){b.addNewItemCollection({itemCollection:{name:a.itemCollection.name,description:a.itemCollection.description,itemType:a.itemCollection.itemType}}).then(function(a){console.log("collection: ",a);var b="Success! Item Collection "+a.data.name+" was saved!";alert(b)}),a.reset()}}]),angular.module("SkillitAdminApp").controller("GlossaryentriesCtrl",["$scope","glossaryService","itemCollectionService",function(a,b,c){c.getItemCollectionsForType("glossary").then(function(b){a.glossaryCollections=b.data},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.glossaryEntry={picture:{},video:{},collectionIds:[]},a.curCollectionId="",a.addCollection=function(){a.curCollectionId&&""!==a.curCollectionId&&(a.glossaryEntry.collectionIds.push(a.curCollectionId),a.curCollectionId="")},a.removeCollection=function(b){a.glossaryEntry.collectionIds.splice(b,1)},a.reset=function(){a.glossaryEntry=angular.copy({picture:{},video:{},collectionIds:[]}),a.glossaryEntryForm.$setPristine(),a.glossaryEntryForm.$setUntouched()},a.save=function(){b.addNewGlossaryEntry({glossaryEntry:{title:a.glossaryEntry.title,text:a.glossaryEntry.text,picture:a.glossaryEntry.picture,video:a.glossaryEntry.video,collectionIds:a.glossaryEntry.collectionIds}}).then(function(a){var b="Success! Tip "+a.data.title+" was saved!";alert(b)},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.reset()},a.glossaryEntrySanityCheck=function(){return a.glossaryEntry.collectionIds&&a.glossaryEntry.collectionIds.length>0?a.glossaryEntry.picture.url&&a.glossaryEntry.video.url?!0:a.glossaryEntry.picture.url?a.glossaryEntry.video.caption&&""!==a.glossaryEntry.video.caption?!1:!0:a.glossaryEntry.video.url?a.glossaryEntry.picture.caption&&""!==a.glossaryEntry.picture.caption?!1:!0:a.glossaryEntry.video.caption&&""!==a.glossaryEntry.video.caption||a.glossaryEntry.picture.caption&&""!==a.glossaryEntry.picture.caption?!1:!0:!1}}]),angular.module("SkillitAdminApp").controller("TrainingvideosCtrl",["$scope","trainingVideosService","itemCollectionService",function(a,b,c){c.getItemCollectionsForType("trainingVideo").then(function(b){a.trainingVideoCollections=b.data},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.trainingVideo={video:{},collectionIds:[]},a.removeCollection=function(b){a.trainingVideo.collectionIds.splice(b,1)},a.addCollection=function(){a.curCollectionId&&""!==a.curCollectionId&&(a.trainingVideo.collectionIds.push(a.curCollectionId),a.curCollectionId="")},a.curCollectionId="",a.reset=function(){a.trainingVideo=angular.copy({video:{},collectionIds:[]}),a.trainingVideoForm.$setPristine(),a.trainingVideoForm.$setUntouched()},a.save=function(){b.addNewTrainingVideo({trainingVideo:{title:a.trainingVideo.title,video:a.trainingVideo.video,collectionIds:a.trainingVideo.collectionIds}}).then(function(a){var b="Success! Video "+a.data.title+" was saved!";alert(b)},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.reset()},a.trainingVideoSanityCheck=function(){return a.trainingVideo.video.url&&""!==a.trainingVideo.video.url&&a.trainingVideo.collectionIds&&a.trainingVideo.collectionIds.length>0?!0:!1}}]),angular.module("SkillitAdminApp").controller("HowtoshopentryCtrl",["$scope","howToShopService","itemCollectionService",function(a,b,c){c.getItemCollectionsForType("howToShop").then(function(b){a.howToShopCollections=b.data},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.howToShopEntry={},a.curCollectionId="",a.removeCollection=function(b){a.howToShopEntry.collectionIds.splice(b,1)},a.addCollection=function(){a.howToShopEntry.collectionIds||(a.howToShopEntry.collectionIds=[]),a.curCollectionId&&""!==a.curCollectionId&&(a.howToShopEntry.collectionIds.push(a.curCollectionId),a.curCollectionId="")},a.addPicture=function(){a.howToShopEntry.pictures||(a.howToShopEntry.pictures=[]),a.howToShopEntry.pictures.push({url:"",caption:""})},a.removePicture=function(){a.howToShopEntry.pictures&&a.howToShopEntry.pictures.length>0&&a.howToShopEntry.pictures.pop()},a.reset=function(){a.howToShopEntry=angular.copy({pictures:[],collectionIds:[]}),a.howToShopEntryForm.$setPristine(),a.howToShopEntryForm.$setUntouched()},a.save=function(){b.addNewHowToShopEntry({howToShopEntry:{title:a.howToShopEntry.title,text:a.howToShopEntry.text,pictures:a.howToShopEntry.pictures,collectionIds:a.howToShopEntry.collectionIds}}).then(function(a){var b="Success! Entry "+a.data.title+" was saved!";alert(b)},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.reset()},a.howToShopEntrySanityCheck=function(){if(a.howToShopEntry.collectionIds&&a.howToShopEntry.collectionIds.length>0){for(var b=a.howToShopEntry.pictures.length-1;b>=0;b--)if(!a.howToShopEntry.pictures[b].url||""===a.howToShopEntry.pictures[b].url)return!1;return!0}return!1}}]),angular.module("SkillitAdminApp").controller("DailytipsCtrl",["$scope","dailyTipsService","itemCollectionService",function(a,b,c){c.getItemCollectionsForType("dailyTip").then(function(b){a.tipCollections=b.data},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.dailyTip={picture:{},video:{},collectionIds:[]},a.curCollectionId="",a.removeCollection=function(b){a.dailyTip.collectionIds.splice(b,1)},a.addCollection=function(){a.curCollectionId&&""!==a.curCollectionId&&(a.dailyTip.collectionIds.push(a.curCollectionId),a.curCollectionId="")},a.reset=function(){a.dailyTip=angular.copy({picture:{},video:{},collectionIds:[]}),a.dailyTipsForm.$setPristine(),a.dailyTipsForm.$setUntouched()},a.save=function(){b.addNewDailyTip({dailyTip:{title:a.dailyTip.title,text:a.dailyTip.text,picture:a.dailyTip.picture,video:a.dailyTip.video,collectionIds:a.dailyTip.collectionIds,hasBeenDailyTip:!1,isTipOfTheDay:!1}}).then(function(a){var b="Success! Tip "+a.data.title+" was saved!";alert(b)},function(a){console.log("Server Error: ",a.message),alert("Server Error: "+a.message)}),a.reset()},a.dailyTipSanityCheck=function(){return a.dailyTip.collectionIds&&a.dailyTip.collectionIds.length>0?a.dailyTip.picture.url&&a.dailyTip.video.url?!0:a.dailyTip.picture.url?a.dailyTip.video.caption&&""!==a.dailyTip.video.caption?!1:!0:a.dailyTip.video.url?a.dailyTip.picture.caption&&""!==a.dailyTip.picture.caption?!1:!0:a.dailyTip.video.caption&&""!==a.dailyTip.video.caption||a.dailyTip.picture.caption&&""!==a.dailyTip.picture.caption?!1:!0:!1}}]),angular.module("SkillitAdminApp").factory("dailyTipsService",["Restangular",function(a){var b=a.all("dailyTips");return{getAllDailyTips:function(){return b.customGET("/")},addNewDailyTip:function(a){return b.post(a)}}}]),angular.module("SkillitAdminApp").factory("itemCollectionService",["Restangular",function(a){var b=a.all("itemCollections");return{getAllItemCollections:function(){return b.customGET("/")},addNewItemCollection:function(a){return b.post(a)},getItemCollectionsForType:function(a){return b.customPOST({itemType:a},"getCollectionsForItemType")}}}]),angular.module("SkillitAdminApp").factory("glossaryService",["Restangular",function(a){var b=a.all("glossaryEntries");return{getAllGlossaryEntries:function(){return b.customGET("/")},addNewGlossaryEntry:function(a){return b.post(a)}}}]),angular.module("SkillitAdminApp").factory("howToShopService",["Restangular",function(a){
var b=a.all("howToShopEntries");return{getAllHowToShopEntries:function(){return b.customGET("/")},addNewHowToShopEntry:function(a){return b.post(a)}}}]),angular.module("SkillitAdminApp").factory("trainingVideosService",["Restangular",function(a){var b=a.all("trainingVideos");return{getAllTrainingVideos:function(){return b.customGET("/")},addNewTrainingVideo:function(a){return b.post(a)}}}]),angular.module("SkillitAdminApp").run(["$templateCache",function(a){a.put("views/bakestepinput.html",'<div ng-form="bakeStepForm" class="bg-warning"> <b>Bake Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Baking Time: <input type="text" ng-model="constructingStep.stepSpecifics[0].val" required name="bakingTimeInput" size="50"><br> Product Input (Expects a Step): <step-input-form constructing-step="constructingStep" input-name="productInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <b>Auxiliary Stir Steps:</b> <div ng-repeat="auxStep in constructingStep.auxiliarySteps"> For IngredientType: <select ng-model="constructingStep.auxiliarySteps[$index].ingredientTypeName" ng-options="type.typeName as type.typeName for type in ingredientList.ingredientTypes" required></select><br> <stir-step-input is-aux-step="true" constructing-step="constructingStep" ingredient-list="ingredientList" step-list="stepList" aux-step-arr-index="$index"></stir-step-input> <button class="btn btn-xs btn-danger" ng-click="removeAuxStep($index)">Remove Auxiliary Stir Step</button><br><br> </div> <button class="btn btn-sm btn-danger" ng-click="addAuxStep()">Add Auxiliary Stir Step</button><br><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text:<br> <pre>Bake [ingredient1] and [ingredient2] for [bakingTime]. [auxiliaryStep1] and [auxiliaryStep2]</pre> </div> </div>'),a.put("views/bakestepitem.html",'<div> <b>Bake Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>Baking Time: {{step.bakingTime}}</p> <p><b>Product Input</b></p> <p>SourceType: {{step.productInput.sourceType}}</p> <p ng-if="step.productInput.sourceId">SourceId: {{step.productInput.sourceId}}</p> <p>Key: {{step.productInput.key}}</p><br> <p>ProductName: {{step.productName}}</p> <div ng-if="step.auxiliarySteps.length > 0"> <p><em>Auxiliary Stir Steps</em></p> <div ng-repeat="stirStep in step.auxiliarySteps"> <p>IngredientType: {{stirStep.ingredientTypeName}}</p> <p>When To Stir: {{stirStep.whenToStir}}</p> <p>StirType: {{stirStep.stirType}}</p> </div> </div> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/boilstepinput.html",'<div ng-form="boilStepForm" class="bg-warning"> <b>Boil Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Boiling Duration: <input type="text" ng-model="constructingStep.stepSpecifics[1].val" name="boilingDurationInput" size="50"><br> Cooking According To Instructions: <input type="checkbox" ng-model="constructingStep.stepSpecifics[0].val"><br> Ingredient Inputs (step or ingredient type): <step-input-form constructing-step="constructingStep" input-name="ingredientInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Dish Input (step or dish): <step-input-form constructing-step="constructingStep" input-name="dishInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text: <br> <pre>Boil the [members of ingredientInput1],..., and [members of ingredientInputN] in the [boilingDish] [accordingToPackageInstructions]/for [boiling Duration]</pre> </div> </div>'),a.put("views/boilstepitem.html",'<div> <b>Boil Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>Boiling Duration: {{step.boilingDuration}}</p> <p><em>Ingredient Inputs</em></p> <div ng-repeat="input in step.ingredientInputs"> <p>SourceType: {{input.sourceType}}</p> <p>SourceId: {{input.sourceId}}</p> <p>Key: {{input.key}}</p> <br> </div> <p><em>Dish Product Input</em></p> <p>SourceType: {{step.dishInput.sourceType}}</p> <p>SourceId: {{step.dishInput.sourceId}}</p> <p>Key: {{step.dishInput.key}}</p> <p>Product Name: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/bringtoboilstepinput.html",'<div ng-form="bringToBoilStepForm" class="bg-info"> <b>Bring To Boil Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" ng-pattern="integerval"><br> Water Amount: <input type="text" ng-model="constructingStep.stepSpecifics[0].val" name="waterAmountInput"><br> Dish Input (Expects a Dish): <step-input-form constructing-step="constructingStep" input-name="dishInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text: <br> <pre>Bring [waterAmount] of water to boil in [dishInput] -- or if no waterAmount -- Bring water to boil in [dishInput]</pre> </div> </div>'),a.put("views/bringtoboilstepitem.html",'<div> <b>Bring To Boil Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>Water Amount: {{step.waterAmount}}</p> <p><b>Dish Input</b></p> <p>SourceType: {{step.dishInput.sourceType}}</p> <p>Key: {{step.dishInput.key}}</p><br> <p>ProductName: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/cookstepinput.html",'<div ng-form="cookStepForm" class="bg-warning"> <b>Cook Step</b><br> CookType: <select name="cookTypeSelect" ng-model="constructingStep.stepSpecifics[0].val" ng-options="cookType for cookType in cookTypes" required></select><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Cook Duration: <input type="text" ng-model="constructingStep.stepSpecifics[1].val" name="cookDurationInput" size="50"><br> Cook According To Instructions: <input type="checkbox" ng-model="constructingStep.stepSpecifics[2].val"><br> Ingredient Inputs: <step-input-form constructing-step="constructingStep" input-name="ingredientInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Dish Input: <step-input-form constructing-step="constructingStep" input-name="dishInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text: <br> <pre>Cook the [members of ingredientInput1],..., and [members of ingredientInputN] in the [cookingDish] (with [ingredients in cookingDish]) [accordingToPackageInstructions]/for [cookDuration]</pre> </div> </div>'),a.put("views/cookstepitem.html",'<div> <b>Cook Step</b><br> <p>Cook Type: {{step.cookType}}</p> <p>Step Duration: {{step.stepDuration}}</p> <p>Cook Duration: {{step.cookDuration}}</p> <p>Cook According to Instructions: {{step.cookAccordingToInstructions}}</p> <p><em>Ingredient Inputs</em></p> <div ng-repeat="input in step.ingredientInputs"> <p>SourceType: {{input.sourceType}}</p> <p>SourceId: {{input.sourceId}}</p> <p>Key: {{input.key}}</p> <br> </div> <p><em>Dish Product Input</em></p> <p>SourceType: {{step.dishInput.sourceType}}</p> <p>SourceId: {{step.dishInput.sourceId}}</p> <p>Key: {{step.dishInput.key}}</p> <p>Product Name: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/customstepinput.html",'<div ng-form="customStepForm" class="bg-warning"> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Custom Step Text: <textarea name="customTextInput" required ng-model="constructingStep.stepSpecifics[0].val" rows="4" cols="50"></textarea><br> Ingredient Inputs: <step-input-form constructing-step="constructingStep" input-name="ingredientInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Dish Inputs: <step-input-form constructing-step="constructingStep" input-name="dishInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> </div>'),a.put("views/customstepitem.html",'<div> <b>Custom Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>Custom Step Text: {{step.customStepText}}</p> <p><em>Ingredient Inputs</em></p> <div ng-repeat="input in step.ingredientInputs"> <p>SourceType: {{input.sourceType}}</p> <p>SourceId: {{input.sourceId}}</p> <p>Key: {{input.key}}</p> </div> <p><em>Dish Inputs</em></p> <div ng-repeat="input in step.dishInputs"> <p>SourceType: {{input.sourceType}}</p> <p>SourceId: {{input.sourceId}}</p> <p>Key: {{input.key}}</p> </div> <p>Product Name: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/cutstepinput.html",'<div ng-form="cutStepForm" class="bg-warning"> <b>Cut Step</b><br> CutActionType: <select name="actionTypeSelect" ng-model="constructingStep.stepSpecifics[0].val" ng-options="actionType for actionType in actionTypes" required></select><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Ingredient Input: <step-input-form constructing-step="constructingStep" input-name="cutIngredientInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form> <br> ActionModifier: <input type="text" ng-model="constructingStep.stepSpecifics[1].val" size="50" name="actionModifierInput"><br> ProductName: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"> <br> <div ng-show="showExampleText"> Example Text:<br> <pre>1. [CutActionType] the [first ingredientToCut] [actionModifier]\n    2. [CutActionType] the [second ingredientToCut] [actionModifier] ... </pre> </div> </div>'),a.put("views/cutstepitem.html",'<div> <b>Cut Step</b><br> <p>CutActionType: {{step.actionType}}</p> <p>Step Duration: {{step.stepDuration}}</p> <p><b>Cut Ingredient Input</b></p> <p>SourceType: {{step.cutIngredientInput.sourceType}}</p> <p ng-if="step.cutIngredientInput.sourceId">SourceId: {{step.cutIngredientInput.sourceId}}</p> <p>Key: {{step.cutIngredientInput.key}}</p><br><br> <p>Action Modifier: {{step.actionModifier}}</p> <p>Product Name: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/dailytips.html",'<div> <h2>Input Daily Tips</h2><br> <form novalidate name="dailyTipsForm"> Title: <input type="text" ng-model="dailyTip.title" size="50" required name="titleInput"><br><br> Text: <textarea ng-model="dailyTip.text" rows="4" cols="50" required name="textInput"></textarea><br><br> Picture: <input type="url" ng-model="dailyTip.picture.url" size="60" name="pictureURLInput" placeholder="URL"> <input type="text" ng-model="dailyTip.picture.caption" size="100" name="pictureCaptionInput" placeholder="Caption"><br><br> Video: <input type="url" ng-model="dailyTip.video.url" size="60" name="videoURLInput" placeholder="URL"> <input type="text" ng-model="dailyTip.video.caption" size="100" name="videoCaptionInput" placeholder="Caption"><br><br> Collections: <select name="itemCollectionSelect" ng-model="curCollectionId" ng-options="collection._id as collection.name for collection in tipCollections"></select><br> <ul> <div ng-repeat="collectionID in dailyTip.collectionIds"> <li>{{collectionID}}</li> <button ng-click="removeCollection($index)">Remove</button> </div> </ul> <button ng-click="addCollection()">Add Collection</button><br><br> <button class="btn btn-large btn-default" ng-click="reset()">Reset Form</button> <button class="btn btn-large btn-success" ng-click="save()" ng-disabled="dailyTipsForm.$invalid || !dailyTipSanityCheck()">Save Tip</button> </form> <pre>\n    {{dailyTip | json}}\n  </pre> </div>'),a.put("views/dishes.html",'<div> <h2>Input Dish</h2> <form novalidate name="dishForm"> Name: <input type="text" ng-model="dish.name" size="50" required name="nameInput"><br><br> IngredientCapacity: <input type="text" ng-model="dish.ingredientCapacity" size="30" required name="capacityInput" ng-pattern="integerval"> <span ng-show="dishForm.capacityInput.$invalid">Please enter a number</span><br><br> <input type="button" class="btn btn-md" ng-click="reset()" value="Reset"> <input type="button" class="btn btn-md btn-success" ng-click="save(dish)" value="Save" ng-disabled="dishForm.$invalid"> </form> <br> <h2>Current Dishes</h2> <ul> <li ng-repeat="dish in dishes"> <p><b>Name</b>: {{dish.name}}</p> <p><b>Capacity</b>: {{dish.ingredientCapacity}}</p> </li> </ul> <pre>dish: {{dish | json}}</pre> </div>'),a.put("views/drystepinput.html",'<div ng-form="dryStepForm" class="bg-warning"> <b>Dry Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Ingredient Input: <step-input-form constructing-step="constructingStep" input-name="ingredientInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Dry Method: <select name="dryMethodSelect" ng-model="constructingStep.stepSpecifics[0].val" ng-options="method for method in dryMethods" required></select><br> ProductName: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text:<br> <pre>[dryMethod] dry the [ingredient1], [ingredient2], and [ingredient3]</pre> </div> </div>'),a.put("views/drystepitem.html",'<div> <b>Dry Step</b> <p>Step Duration: {{step.stepDuration}}</p> <p>Dry Method: {{step.dryMethod}}</p> <p><b>Ingredient Input</b></p> <p>SourceType: {{step.ingredientInput.sourceType}}</p> <p ng-if="step.ingredientInput.sourceId">SourceId: {{step.ingredientInput.sourceId}}</p> <p>Key: {{step.ingredientInput.key}}</p><br> <p>ProductName: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/equipmentprepstepinput.html",'<div ng-form="equipmentPrepStepForm" class="bg-warning"> <b>Equipment Prep Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Prep Action: <select name="prepActionSelect" ng-model="constructingStep.stepSpecifics[0].val" ng-options="prepAction for prepAction in prepActionTypes" required></select> Prep Modifier: <input type="text" ng-model="constructingStep.stepSpecifics[1].val" name="prepModifierInput" size="50"><br> Dish Inputs (expects dish): <step-input-form constructing-step="constructingStep" input-name="dishInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> ProductName: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text:<br> <pre>[prepActionType] [# of dishes] [dishesToPrep] with [prepModifier]</pre> </div> </div>'),a.put("views/equipmentprepstepitem.html",'<div> <b>Equipment Prep Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>PrepActionType: {{step.prepActionType}}</p> <p>Prep Modifier: {{step.prepModifier}}</p> <p><em>Dish Inputs</em></p> <div ng-repeat="input in step.dishInputs"> <p>SourceType: {{input.sourceType}}</p> <p>SourceId: {{input.sourceId}}</p> <p>Key: {{input.key}}</p> </div> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/glossaryentries.html",'<div> <h2>Input Glossary Entries</h2><br> <form novalidate name="glossaryEntryForm"> Title: <input type="text" ng-model="glossaryEntry.title" size="50" required name="titleInput"><br><br> Text: <textarea ng-model="glossaryEntry.text" rows="4" cols="50" required name="textInput"></textarea><br><br> Picture: <input type="url" ng-model="glossaryEntry.picture.url" size="60" name="pictureURLInput" placeholder="URL"> <input type="text" ng-model="glossaryEntry.picture.caption" size="100" name="pictureCaptionInput" placeholder="Caption"><br><br> Video: <input type="url" ng-model="glossaryEntry.video.url" size="60" name="videoURLInput" placeholder="URL"> <input type="text" ng-model="glossaryEntry.video.caption" size="100" name="videoCaptionInput" placeholder="Caption"><br><br> Collections: <select name="itemCollectionSelect" ng-model="curCollectionId" ng-options="collection._id as collection.name for collection in glossaryCollections"></select><br> <ul> <div ng-repeat="collectionID in glossaryEntry.collectionIds"> <li>{{collectionID}}</li> <button ng-click="removeCollection($index)">Remove</button> </div> </ul> <button ng-click="addCollection()">Add Collection</button><br><br> <button class="btn btn-large btn-default" ng-click="reset()">Reset Form</button> <button class="btn btn-large btn-success" ng-click="save()" ng-disabled="glossaryEntryForm.$invalid || !glossaryEntrySanityCheck()">Save Entry</button> </form> <pre>\n    {{glossaryEntry | json}}\n  </pre> </div>'),a.put("views/heatstepinput.html",'<div ng-form="heatStepForm" class="bg-warning"> <b>Heat Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"> <br> Heats Oil: <input type="checkbox" ng-model="constructingStep.stepSpecifics[0].val" name="heatsOilInput"><br> Heat Setting: <input type="text" ng-model="constructingStep.stepSpecifics[1].val" size="50" required name="heatSettingInput"><br> Dish Input (Expects a Dish): <step-input-form constructing-step="constructingStep" input-name="dishInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> ProductName: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text:<br> <pre>if not heatsOil: Heat [dishInput] over [heatSetting] heat --- if heatsOil: Add oil to [dishInput] and then heat it over [heatSetting] heat</pre> </div> </div>'),a.put("views/heatstepitem.html",'<div> <b>Heat Step</b> <p>Step Duration: {{step.stepDuration}}</p> <p>Heats Oil: {{step.heatsOil}}</p> <p>Heat Setting: {{step.heatsOil}}</p> <p><b>Dish Input</b></p> <p>SourceType: {{step.dishInput.sourceType}}</p> <p ng-if="step.ingredientInput.sourceId">SourceId: {{step.dishInput.sourceId}}</p> <p>Key: {{step.dishInput.key}}</p><br> <p>ProductName: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/howtoshopentry.html",'<div> <h2>Input How To Shop Entry</h2> <form novalidate name="howToShopEntryForm"> Title: <input type="text" ng-model="howToShopEntry.title" size="50" required name="titleInput"><br><br> Text: <textarea ng-model="howToShopEntry.text" rows="4" cols="50" required name="textInput"></textarea><br><br> Pictures: <div ng-repeat="picture in howToShopEntry.pictures"> <input type="url" ng-model="picture.url" size="60" placeholder="URL"> <input type="text" ng-model="picture.caption" size="100" placeholder="Caption"> </div> <button class="btn btn-large btn-info" ng-click="addPicture()">Add a Picture</button> <button class="btn btn-large btn-warning" ng-disabled="!howToShopEntry.pictures || howToShopEntry.pictures.length === 0" ng-click="removePicture()">Remove Picture</button> <br><br> Collections: <select name="itemCollectionSelect" ng-model="curCollectionId" ng-options="collection._id as collection.name for collection in howToShopCollections"></select><br> <ul> <div ng-repeat="collectionID in howToShopEntry.collectionIds"> <li>{{collectionID}}</li> <button ng-click="removeCollection($index)">Remove</button> </div> </ul> <button ng-click="addCollection()">Add Collection</button><br><br> <button class="btn btn-large btn-default" ng-click="reset()">Reset Form</button> <button class="btn btn-large btn-success" ng-click="save()" ng-disabled="howToShopEntryForm.$invalid || !howToShopEntrySanityCheck()">Save Entry</button> </form> <pre>\n    {{howToShopEntry | json}}\n  </pre> </div>'),a.put("views/ingredients.html",'<div> <h2>Input Ingredient</h2> <form novalidate name="ingredientForm"> Name: <input type="text" ng-model="ingredient.name" size="50" required name="nameInput"><br><br> Input Category: <select name="inputCategorySelect" ng-model="ingredient.inputCategory" ng-options="category for category in inputCategories" required></select><br><br> Ingredient Forms: <br> <div ng-repeat="inForm in inForms" class="bg-warning" ng-form="formForm"> <ul> <li> Name: <input type="text" ng-model="inForm.name" size="50" required name="inFormName"> </li> <li> Cooking Times: <br> <div ng-repeat="time in inForm.cookingTimes" class="bg-info" ng-form="cookingForm"> Cooking Method: <select name="cookingMethods" ng-model="time.cookingMethod" required> <option value="">Select Cooking Method</option> <option ng-repeat="method in cookingMethods">{{method}}</option> </select> <span ng-show="cookingForm.cookingMethods.$invalid">select a cooking method</span><br> Min Cook Time: <input type="text" ng-model="time.minTime" size="30" required name="minTime" ng-pattern="integerval"> Max Cook Time: <input type="text" ng-model="time.maxTime" size="30" required name="maxTime" ng-pattern="integerval"> <span ng-show="cookingForm.minTime.$invalid || cookingForm.maxTime.$invalid">Please enter a number</span> <br> Times Per Side?: <input type="checkbox" ng-model="time.timesArePerSide"><br> <button ng-click="removeCookingTime(inForm, $index)" class="btn btn-link btn-xs">Remove Cooking Time</button> <br><br> </div> </li> <button ng-click="addCookingTime(inForm)" class="btn btn-primary btn-xs">Add Cooking Time</button> <button ng-click="removeIngredientForm($index)" class="btn btn-danger btn-xs">Remove Ingredient Form</button> </ul> </div> <button ng-click="addIngredientForm()" class="btn btn-warning btn-sm">Add IngredientForm</button><br><br> Ingredient Tips: <br> <div ng-repeat="tip in ingredientTips" class="bg-info" ng-form="tipForm"> <ul> <li> StepType: <select name="stepTypeSelect" ng-model="tip.stepType" ng-change="setSubTypes(tip.stepType, $index)" required> <option value="">Select StepType</option> <option ng-repeat="stepType in stepTypes">{{stepType}}</option> </select> StepSubType: <select name="stepSubTypeSelect" ng-model="tip.stepSubType" ng-options="stepSubType for stepSubType in subTypes[$index]" required> </select> </li> <li> Step Tip: <br> <div class="bg-warning"> Title: <input type="text" ng-model="tip.stepTip.title" size="50" name="tipTitle"><br> Text: <textarea ng-model="tip.stepTip.text" rows="4" cols="50" name="tipText"></textarea><br> <span ng-show="tipForm.tipText.$invalid">Must enter text for the tip</span><br> PictureURL: <input type="url" ng-model="tip.stepTip.pictureURL" name="tipPic" size="70"> <br> <span ng-show="tipForm.tipPic.$invalid">PictureURL must be a URL</span><br> VideoTitle: <input type="text" ng-model="tip.stepTip.videoTitle" size="50" name="tipVidTitle"><br> VideoURL: <input type="url" ng-model="tip.stepTip.videoURL" name="tipVid"> <br> <span ng-show="tipForm.tipVid.$invalid">VideoURL must be a URL</span><br> </div> </li> <button ng-click="removeTip($index)" class="btn btn-danger btn-xs">Remove Tip</button> </ul> </div> <button class="btn btn-warning btn-sm" ng-click="addIngredientTip()">Add Ingredient Tip</button><br><br> <button class="btn btn-default" ng-click="reset()">Reset</button> <button class="btn btn-info" ng-click="preview()">Preview Ingredient</button> <button class="btn btn-success" ng-click="save()" ng-disabled="ingredientForm.$invalid || !ingredientSanityCheck()">Save</button> </form> <br> <pre>Ingredient: {{ingredient | json}}</pre><br> <h2>Current Ingredients</h2> <ul> <li ng-repeat="ingredient in ingredients"> <p><b>Name</b>: {{ingredient.name}}</p> <pre>Forms: {{ingredient.ingredientForms | json}}</pre> <pre>Tips: {{ingredient.ingredientTips | json}}</pre> </li> </ul> </div>'),
a.put("views/itemcollections.html",'<div> <h2>Input Item Collections</h2> <form novalidate name="itemCollectionsForm"> Name: <input type="text" ng-model="itemCollection.name" size="50" required name="nameInput"><br><br> Description: <textarea ng-model="itemCollection.description" rows="4" cols="50" required name="descriptionInput"></textarea><br><br> ItemType: <select name="itemTypeSelect" ng-model="itemCollection.itemType" ng-options="itemType as itemType for itemType in itemTypes" required></select><br><br> <button class="btn btn-large btn-success" ng-click="save()" ng-disabled="itemCollectionsForm.$invalid">Save Collection</button> </form> <pre>\n    {{itemCollection | json}}\n  </pre> </div>'),a.put("views/placestepinput.html",'<div ng-form="placeStepForm" class="bg-warning"> <b>Place Step</b><br> PlaceType: <select name="placeTypeSelect" ng-model="constructingStep.stepSpecifics[1].val" ng-options="placeType for placeType in placeTypes" required></select><br> PlaceModifier: <input type="text" ng-model="constructingStep.stepSpecifics[0].val" size="50" name="placeModifierInput"><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Ingredient Inputs (step or ingredient type): <step-input-form constructing-step="constructingStep" input-name="ingredientInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Dish Input (step or dish): <step-input-form constructing-step="constructingStep" input-name="dishProductInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text:<br> <pre>Place [members of ingredientInput1], ..., and [members of ingredientInputN] on [dish from DishInput] with [ingredients from DishInput]</pre> </div> </div>'),a.put("views/placestepitem.html",'<div> <b>Place Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p><em>Ingredient Inputs</em></p> <div ng-repeat="input in step.ingredientInputs"> <p>SourceType: {{input.sourceType}}</p> <p>SourceId: {{input.sourceId}}</p> <p>Key: {{input.key}}</p> <br> </div> <p><em>Dish Product Input</em></p> <p>SourceType: {{step.dishProductInput.sourceType}}</p> <p>SourceId: {{step.dishProductInput.sourceId}}</p> <p>Key: {{step.dishProductInput.key}}</p> <p>Product Name: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/preheatovenstepinput.html",'<div ng-form="preheatOvenStepForm" class="bg-warning"> <b>Preheat Oven Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Oven Temperature: <input type="text" ng-model="constructingStep.stepSpecifics[0].val" required name="overTemperatureInput" size="50"><br> Product Name: <input type="text" ng-model="constructingStep.productName" required name="productInputName" size="50"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text:<br> <pre>Preheat oven to [ovenTemperature]</pre> </div> </div>'),a.put("views/preheatovenstepitem.html",'<div> <b>Preheat Oven Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>Oven Temperature: {{step.ovenTemperature}}</p> <p>Product Name: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/recipes.html",'<div> <h2>Recipe Input</h2> <form novalidate name="recipeForm"> Name: <input type="text" ng-model="recipe.name" size="50" required name="nameInput"> <span ng-show="recipeForm.nameInput.$invalid">give the recipe a name</span><br> <br> Description: <textarea ng-model="recipe.description" rows="4" cols="50" required name="descInput"></textarea> <span ng-show="recipeForm.descInput.$invalid">give the recipe a description</span><br> Main Picture URL: <input type="url" ng-model="recipe.mainPictureURL" size="70" name="mainPicInput" required><br> Main Video URL: <input type="url" ng-model="recipe.mainVideoURL" size="70" name="mainVidInput"><br><br> RecipeType: <select name="typeSelect" ng-model="recipe.recipeType" ng-options="recipeType for recipeType in recipeTypes" required></select> <span ng-show="recipeForm.typeSelect.$invalid">select a recipe type</span><br><br> RecipeCategory: <select name="categorySelect" ng-model="recipe.recipeCategory" ng-options="recipeCategory for recipeCategory in recipeCategories" required></select> <span ng-show="recipeForm.categorySelect.$invalid">select a recipe category</span><br><br> Primary Cooking Method: <select name="primaryCookingSelect" ng-model="recipe.primaryCookingMethod" ng-options="method for method in cookingMethods" required></select> <span ng-show="recipeForm.primaryCookingSelect.$invalid">select a cooking method</span> Other Cooking Methods: <select name="otherCookingSelect" ng-options="method for method in cookingMethods" ng-model="otherCookingMethod"></select> <button class="btn btn-info btn-xs" ng-click="addCookingMethod()">Add Cooking Method</button> <div ng-repeat="method in recipe.otherCookingMethods"> {{method}} <button class="btn btn-danger btn-xs" ng-click="removeCookingMethod($index)"> - </button> </div><br><br> Can Add Seasoning: <input type="checkbox" ng-model="recipe.canAddSeasoningProfile"><br><br> Default Seasoning: <select name="seasoningSelect" ng-model="recipe.defaultSeasoningProfile" ng-options="profile.name for profile in seasoningProfiles" ng-disabled="!recipe.canAddSeasoningProfile"></select><br><br> <h4>Ingredient List</h4> <b>Ingredient Types</b><br><br> <div ng-repeat="type in ingredientList.ingredientTypes" class="bg-warning" ng-form="typeForm"> TypeName: <input type="text" ng-model="type.typeName" size="50" required name="typeNameInput"> <span ng-show="typeForm.typeName.$invalid">give a type name</span><br><br> DisplayName: <input type="text" ng-model="type.displayName" size="50" required name="displayNameInput"> <span ng-show="typeForm.displayName.$invalid">give a display name</span><br><br> Ingredients: <select name="ingredientSelect" ng-model="typeIngredient" ng-options="ingredient.name for ingredient in ingredients" ng-init="setSelectedIngredientForms(typeIngredient)" ng-change="setSelectedIngredientForms(typeIngredient)"></select> <span ng-show="type.ingredients.length === 0">there must be at least one ingredient in a type</span> <div ng-repeat="form in typeIngredient.ingredientForms"> {{form.name}}: <input type="checkbox" ng-model="selectedIngredientForms[$index]"> </div> <br> <button class="btn btn-primary btn-xs" ng-click="addTypeIngredient($index, typeIngredient)" ng-disabled="!isAFormSelected()">Add Ingredient</button> <div ng-repeat="ingredient in type.ingredients"> <pre>{{ingredient | json}}</pre><button class="btn btn-danger btn-xs" ng-click="removeTypeIngredient(type, $index)"> - </button> </div><br><br> Min Ingredients Needed: <input type="text" ng-model="type.minNeeded" size="30" required name="minNeeded" ng-pattern="integerval"> <span ng-show="typeForm.minNeeded.$invalid">give a number for minNeeded</span><br> <button class="btn btn-danger btn-sm" ng-click="removeIngredientType($index)">Remove Ingredient Type</button><br><br> </div> <button class="btn btn-primary btn-sm" ng-click="addIngredientType()">Add Ingredient Type</button><br><br> <b>Equipment Needed</b><br> <select name="equipmentSelect" ng-model="typeDish" ng-options="dish.name for dish in dishes"></select> <button class="btn btn-primary btn-xs" ng-click="addDish()" ng->Add Dish</button> <div ng-repeat="dish in ingredientList.equipmentNeeded"> <pre>{{dish.name}}</pre><button class="btn btn-danger btn-xs" ng-click="removeDish($index)"> - </button> </div> Primary Ingredient Type: <select name="primaryIngredientTypeSelect" ng-model="recipe.primaryIngredientType" ng-options="type.typeName as type.typeName for type in ingredientList.ingredientTypes" required></select><br><br> <h4>Step List</h4> <div ng-form="stepForm"> <b>Add New Step: </b><br><br> StepType <select name="stepTypeSelect" ng-model="constructingStep.stepType" ng-options="stepType for stepType in stepTypes" ng-required="!recipeSanityCheck()"></select> <cut-step-input ng-if="constructingStep.stepType === \'Cut\'"></cut-step-input> <cook-step-input ng-if="constructingStep.stepType === \'Cook\'"></cook-step-input> <bake-step-input ng-if="constructingStep.stepType === \'Bake\'"></bake-step-input> <boil-step-input ng-if="constructingStep.stepType === \'Boil\'"></boil-step-input> <bring-to-boil-step-input ng-if="constructingStep.stepType === \'BringToBoil\'"></bring-to-boil-step-input> <custom-step-input ng-if="constructingStep.stepType === \'Custom\'"></custom-step-input> <dry-step-input ng-if="constructingStep.stepType === \'Dry\'"></dry-step-input> <heat-step-input ng-if="constructingStep.stepType === \'Heat\'"></heat-step-input> <place-step-input ng-if="constructingStep.stepType === \'Place\'"></place-step-input> <preheat-oven-step-input ng-if="constructingStep.stepType === \'PreheatOven\'"></preheat-oven-step-input> <sautee-step-input ng-if="constructingStep.stepType === \'Sautee\'"></sautee-step-input> <season-step-input ng-if="constructingStep.stepType === \'Season\'"></season-step-input> <slow-cook-step-input ng-if="constructingStep.stepType === \'SlowCook\'"></slow-cook-step-input> <steam-step-input ng-if="constructingStep.stepType === \'Steam\'"></steam-step-input> <stir-step-input ng-if="constructingStep.stepType === \'Stir\'" is-aux-step="false" constructing-step="constructingStep" ingredient-list="ingredientList" steplist="stepList" aux-step-arr-index=""></stir-step-input> <equipment-prep-step-input ng-if="constructingStep.stepType === \'EquipmentPrep\'"></equipment-prep-step-input> <br><br> </div> <button ng-disabled="stepForm.$invalid" ng-click="addStep()" class="btn btn-default">Append Step</button> <div ng-repeat="step in stepList" class="bg-info" ng-form="stepFormList"> <em>Step {{$index}}:</em> <cut-step-item ng-if="step.stepType === \'Cut\'"></cut-step-item> <cook-step-item ng-if="step.stepType === \'Cook\'"></cook-step-item> <custom-step-item ng-if="step.stepType === \'Custom\'"></custom-step-item> <bake-step-item ng-if="step.stepType === \'Bake\'"></bake-step-item> <boil-step-item ng-if="step.stepType === \'Boil\'"></boil-step-item> <bring-to-boil-step-item ng-if="step.stepType === \'BringToBoil\'"></bring-to-boil-step-item> <dry-step-item ng-if="step.stepType === \'Dry\'"></dry-step-item> <heat-step-item ng-if="step.stepType === \'Heat\'"></heat-step-item> <place-step-item ng-if="step.stepType === \'Place\'"></place-step-item> <preheat-oven-step-item ng-if="step.stepType === \'PreheatOven\'"></preheat-oven-step-item> <sautee-step-item ng-if="step.stepType === \'Sautee\'"></sautee-step-item> <season-step-item ng-if="step.stepType === \'Season\'"></season-step-item> <slow-cook-step-item ng-if="step.stepType === \'SlowCook\'"></slow-cook-step-item> <steam-step-item ng-if="step.stepType === \'Steam\'"></steam-step-item> <!--Need alterations to below once it\'s built?--> <stir-step-item ng-if="step.stepType === \'Stir\'"></stir-step-item> <equipmentprep-step-item ng-if="step.stepType === \'EquipmentPrep\'"></equipmentprep-step-item> <button ng-if="$last" ng-click="removeStep()">Remove Step</button> </div><br><br> <button class="btn btn-large btn-default" ng-click="reset()">Reset Recipe Form</button> <button class="btn btn-large btn-info" ng-click="preview()">Preview Recipe</button> <button class="btn btn-large btn-success" ng-click="save()" ng-disabled="recipeForm.$invalid || !recipeSanityCheck()">Save Recipe</button> </form> <h3>Current Recipe Being Built</h3> <pre>{{recipe | json}}</pre> </div>'),a.put("views/sauteestepinput.html",'<div ng-form="sauteeStepForm" class="bg-warning"> <b>Sautee Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Sautee Duration: <input type="text" ng-model="constructingStep.stepSpecifics[0].val" required name="sauteeDurationInput" size="50"><br> Ingredient Inputs (step or ingredient type): <step-input-form constructing-step="constructingStep" input-name="ingredientInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Dish Input (step or dish): <step-input-form constructing-step="constructingStep" input-name="dishInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!auxStepAdded" class="btn btn-primary btn-sm" ng-click="addAuxStep()">Add Auxiliary Stir Step</button> <div ng-if="auxStepAdded"> <b>Auxiliary Stir Step:</b><br> <stir-step-input is-aux-step="true" constructing-step="constructingStep" ingredient-list="ingredientList" step-list="stepList" aux-step-arr-index=""></stir-step-input> <button class="btn btn-danger btn-xs" ng-click="removeAuxStep()">Remove Auxiliary Step</button> </div><br><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text: <br> <pre>Sautee the [members of ingredientInput1],..., and [members of ingredientInputN] for [sauteeDuration]. [auxiliaryStep]</pre> </div> </div>'),a.put("views/sauteestepitem.html",'<div> <b>Sautee Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>Sautee Duration: {{step.sauteeDuration}}</p> <p><em>Ingredient Inputs</em></p> <div ng-repeat="input in step.ingredientInputs"> <p>SourceType: {{input.sourceType}}</p> <p>SourceId: {{input.sourceId}}</p> <p>Key: {{input.key}}</p> <br> </div> <p><em>Dish Product Input</em></p> <p>SourceType: {{step.dishProductInput.sourceType}}</p> <p>SourceId: {{step.dishProductInput.sourceId}}</p> <p>Key: {{step.dishProductInput.key}}</p> <p>Product Name: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/seasoningprofiles.html",'<div> <h2>Input Seasoning Profile</h2><br> <form novalidate name="seasoningForm"> Name: <input type="text" ng-model="seasoningProfile.name" size="50" required name="nameInput"><br><br> Spices: <input type="text" ng-model="seasoningProfile.spices" size="70" required name="spiceInput"><br> <p>Comma separated values (e.g. spice1,spice2,spice3) </p><br> <input type="button" class="btn btn-md" ng-click="reset()" value="Reset"> <input type="button" class="btn btn-md btn-success" ng-click="save()" value="Save" ng-disabled="seasoningForm.$invalid"> </form> <br> <h2>Current Seasoning Profiles</h2> <ul> <li ng-repeat="profile in profiles"> <p><b>Name</b>: {{profile.name}}</p> <p><b>Spices</b>: {{profile.spices}}</p> </li> </ul> </div>'),a.put("views/seasonstepinput.html",'<div ng-form="seasonStepForm" class="bg-warning"> <b>Season Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Is Oil: <input type="checkbox" ng-model="constructingStep.stepSpecifics[0].val"><br> Is Season: <input type="checkbox" ng-model="constructingStep.stepSpecifics[1].val"><br> Ingredient Input: <step-input-form constructing-step="constructingStep" input-name="ingredientInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Dish Input: <step-input-form constructing-step="constructingStep" input-name="dishInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text:<br> <pre>[isOil=Oil] and [isSeason=Season] the [ingredient1],..., and [ingredientN]</pre> </div> </div>'),a.put("views/seasonstepitem.html",'<div> <b>Season Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>Is Oil: {{step.isOil}}</p> <p>Is Season: {{step.isSeason}}</p> <p><em>Ingredient Input</em></p> <p>SourceType: {{step.ingredientInput.sourceType}}</p> <p>SourceId: {{step.ingredientInput.sourceId}}</p> <p>Key: {{step.ingredientInput.key}}</p> <br> <p><em>Dish Input</em></p> <p>SourceType: {{step.dishInput.sourceType}}</p> <p>SourceId: {{step.dishInput.sourceId}}</p> <p>Key: {{step.dishInput.key}}</p> <p>ProductName: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/slowcookstepinput.html",'<div ng-form="slowCookStepForm" class="bg-warning"> <b>SlowCook Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Slow Cook Duration: <input type="text" ng-model="constructingStep.stepSpecifics[0].val" required name="slowCookDurationInput" size="50"><br> Temperature Setting: <input type="text" ng-model="constructingStep.stepSpecifics[1].val" required name="tempSettingInput" size="50"><br> Ingredients Inputs (step or ingredient type): <step-input-form constructing-step="constructingStep" input-name="ingredientInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> ProductName: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text: <br> <pre>Slow cook the [members of ingredientInput1],..., and [members of ingredientInputN] on [temperatureSetting] for [slowCookDuration]</pre> </div> </div>'),a.put("views/slowcookstepitem.html",'<div> <b>SlowCook Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>SlowCook Duration: {{step.slowCookDuration}}</p> <p>Temperature Setting: {{step.tempSetting}}</p> <p><em>Ingredient Inputs</em></p> <div ng-repeat="input in step.ingredientInputs"> <p>SourceType: {{input.sourceType}}</p> <p>SourceId: {{input.sourceId}}</p> <p>Key: {{input.key}}</p> <br> </div> <p>ProductName: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/steamstepinput.html",'<div ng-form="steamStepForm" class="bg-warning"> <b>Steam Step</b><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" required name="stepDurationInput" size="30" ng-pattern="integerval"><br> Steaming Duration: <input type="text" ng-model="constructingStep.stepSpecifics[0].val" required name="steamingDurationInput" size="50"><br> Ingredient Inputs: <step-input-form constructing-step="constructingStep" input-name="ingredientInputs" is-multiple="true" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Dish Input: <step-input-form constructing-step="constructingStep" input-name="dishInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required name="productNameInput"><br> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"><br> <div ng-show="showExampleText"> Example Text: <br> <pre>Steam the [ingredient1],..., and [ingredientN] in the [steamingDish] for [steamingDuration]</pre> </div> </div>'),a.put("views/steamstepitem.html",'<div> <b>Steam Step</b><br> <p>Step Duration: {{step.stepDuration}}</p> <p>Steam Duration: {{step.steamDuration}}</p> <p><b>Ingredient Input</b></p> <p>SourceType: {{step.ingredientInput.sourceType}}</p> <p ng-if="step.ingredientInput.sourceId">SourceId: {{step.ingredientInput.sourceId}}</p> <p>Key: {{step.ingredientInput.key}}</p><br><br> <p><b>Dish Input</b></p> <p>SourceType: {{step.dishInput.sourceType}}</p> <p ng-if="step.dishInput.sourceId">SourceId: {{step.dishInput.sourceId}}</p> <p>Key: {{step.dishInput.key}}</p><br><br> <p>Product Name: {{step.productName}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/stepinputform.html",'<!--Not including checkboxes for \'isDish\' and \'isIngredient\' I don\'t believe that they need to be set here... I think that they can be set automatically based on context--> <div ng-form="stepInputSingleForm" ng-if="isMultiple === \'false\'" class="bg-info"> Source Type: <select name="sourceTypeSelect" ng-model="step.stepInputs[stepInputName].sourceType" ng-options="sourceType for sourceType in sourceTypes" required></select><br> <div ng-show="showStepId()"> SourceId: <select name="sourceIdSelect" ng-model="sourceIdStep" ng-options="step as getSourceIdSelectName(step, index) for (index, step) in stepList" ng-change="registerSourceId(sourceIdStep)" ng-required="showStepId()"></select> </div> Key: <select ng-if="step.stepInputs[stepInputName].sourceType === \'StepProduct\'" name="stepKeySelect" ng-model="step.stepInputs[stepInputName].key" ng-options="product for product in getProductKeys(sourceIdStep)" ng-required="step.stepInputs[stepInputName].sourceType === \'StepProduct\'"></select> <select ng-if="step.stepInputs[stepInputName].sourceType === \'IngredientList\'" name="ingredKeySelect" ng-model="step.stepInputs[stepInputName].key" ng-options="type.typeName as type.typeName for type in ingredientList.ingredientTypes" ng-required="step.stepInputs[stepInputName].sourceType === \'IngredientList\'"></select> <select ng-if="step.stepInputs[stepInputName].sourceType === \'EquipmentList\'" name="equipKeySelect" ng-model="step.stepInputs[stepInputName].key" ng-options="dish.name as dish.name for dish in ingredientList.equipmentNeeded" ng-required="step.stepInputs[stepInputName].sourceType === \'EquipmentList\'"></select> </div> <div ng-if="isMultiple === \'true\'" ng-form="stepInputMultipleForm" class="bg-info" ng-repeat="input in step.stepInputs[stepInputName]"> Source Type: <select name="sourceTypeSelect" ng-model="input.sourceType" ng-options="sourceType for sourceType in sourceTypes" required></select><br> <div ng-if="showStepIdMultiple(input)"> SourceId: <select name="sourceIdSelect" ng-model="sourceIdStep[$index]" ng-options="getSourceIdSelectName(step, index) for (index, step) in stepList" ng-change="registerSourceIdMultiple(input, $index, sourceIdStep)" ng-required="showStepIdMultiple(input)"></select> </div> Key: <select ng-if="input.sourceType === \'StepProduct\'" name="stepKeySelect" ng-model="input.key" ng-options="product for product in getProductKeys(sourceIdStep[$index])" ng-required="input.sourceType === \'StepProduct\'"></select> <select ng-if="input.sourceType === \'IngredientList\'" name="ingredKeySelect" ng-model="input.key" ng-options="type.typeName as type.typeName for type in ingredientList.ingredientTypes" ng-required="input.sourceType === \'IngredientList\'"></select> <select ng-if="input.sourceType === \'EquipmentList\'" name="equipKeySelect" ng-model="input.key" ng-options="dish.name as dish.name for dish in ingredientList.equipmentNeeded" ng-required="input.sourceType === \'EquipmentList\'"></select> <button class="btn btn-danger btn-xs" ng-click="removeInput($index)">Remove Input</button> </div> <button ng-if="isMultiple === \'true\'" class="btn btn-info btn-sm" ng-click="addInput()">Add Input</button>'),a.put("views/stirstepinput.html",'<div ng-form="stirStepForm"> <p ng-if="isAuxiliaryStep === \'true\'"><b>Auxiliary Step</b></p> <p ng-if="isAuxiliaryStep === \'false\'"><b>Stir Step</b></p> <div ng-if="isAuxiliaryStep === \'false\'"> <p>Stir Object Input</p> <step-input-form constructing-step="constructingStep" input-name="stirObjectInput" is-multiple="false" ingredient-list="ingredientList" step-list="stepList"></step-input-form><br> Step Duration: <input type="text" ng-model="constructingStep.stepDuration" size="30" required ng-pattern="integerval"><br> Product Name: <input type="text" ng-model="constructingStep.productName" size="50" required><br> When to Stir: <input type="text" ng-model="constructingStep.stepSpecifics[0].val" size="50" required><br> StirType: <select ng-model="constructingStep.stepSpecifics[1].val" ng-options="type for type in stirTypes" required></select><br> <!--Omitting the \'isAtSentenceBeginning\' property - probably hard to determine that from this vantage point--> </div> <div ng-if="isAuxiliaryStep === \'true\'"> <div ng-if="isAuxDictionary(constructingStep.stepType)"> When to Stir: <input type="text" ng-model="constructingStep.auxiliarySteps[auxStepArrIndex].stepSpecifics[0].val" size="50" required><br> StirType: <select ng-model="constructingStep.auxiliarySteps[auxStepArrIndex].stepSpecifics[1].val" ng-options="type for type in stirTypes" required></select><br> <!--Omitting the \'isAtSentenceBeginning\' property - probably hard to determine that from this vantage point--> </div> <div ng-if="!isAuxDictionary(constructingStep.stepType)"> When to Stir: <input type="text" ng-model="constructingStep.auxiliarySteps[0].stepSpecifics[0].val" size="50" required><br> StirType: <select ng-model="constructingStep.auxiliarySteps[0].stepSpecifics[1].val" ng-options="type for type in stirTypes" required></select><br> </div> </div> <div ng-if="isAuxiliaryStep === \'false\'"> <button ng-show="!tipAdded" class="btn btn-sm btn-primary" ng-click="addTip()">Add Tip</button><br> <div ng-if="tipAdded"> <b>Step Tip</b><br> Title: <input type="text" name="tipTitleInput" ng-model="constructingStep.stepTip.title" size="50"><br> Text: <textarea name="tipTextInput" ng-model="constructingStep.stepTip.text" rows="4" cols="50"></textarea><br> PictureURL: <input type="url" ng-model="constructingStep.stepTip.pictureURL" size="70" name="tipPictureInput"><br> VideoTitle: <input type="text" ng-model="constructingStep.stepTip.videoTitle" size="50" name="tipVideoTitleInput"><br> VideoURL: <input type="url" ng-model="constructingStep.stepTip.videoURL" size="70" name="tipVideoUrlInput"><br> <button class="btn btn-danger btn-xs" ng-click="removeTip()">Remove Tip</button> </div> </div> Show Example Step Text: <input type="checkbox" ng-model="showExampleText"> <br> <div ng-show="showExampleText"> Example Text:<br> <pre>[StirType] the [ingredient1], [ingredient2], and [ingredient3] [whenToStir]</pre> </div> </div>'),
a.put("views/stirstepitem.html",'<div> <p ng-if="step.stirObjectInput"><b>Stir Step</b></p> <p ng-if="!step.stirObjectInput"><b>Auxiliary Step</b></p> <div ng-if="step.stirObjectInput"> <p><em>Stir Object Input</em></p> <p>SourceType: {{step.stirObjectInput.sourceType}}</p> <p ng-if="step.stirObjectInput.sourceId"> SourceId: {{step.stirObjectInput.sourceId}} </p> <p>Key: {{step.stirObjectInput.key}}</p><br> <p>StepDuration: {{step.stepDuration}}</p> <p>ProductName: {{step.productName}}</p> </div> <p ng-if="!step.stirObjectInput"> Ingredient Type: {{step.ingredientTypeName}} </p> <p>When to Stir: {{step.whenToStir}}</p> <p>Stir Type: {{step.stirType}}</p> <div ng-if="step.stepTip"> <p><b>Step Tip</b></p> <p>Title: {{step.stepTip.title}}</p> <p>Text: {{step.stepTip.text}}</p> <p ng-if="step.stepTip.pictureURL">PictureURL: {{step.stepTip.pictureURL}}</p> <p ng-if="step.stepTip.videoTitle">VideoTitle: {{step.stepTip.videoTitle}}</p> <p ng-if="step.stepTip.videoURL">VideoURL:{{step.stepTip.videoURL}}</p> </div> </div>'),a.put("views/trainingvideos.html",'<div> <h2>Input Training Videos</h2> <form novalidate name="trainingVideoForm"> Title: <input type="text" ng-model="trainingVideo.title" size="50" required name="titleInput"><br><br> Video: <input type="url" ng-model="trainingVideo.video.url" size="60" name="videoURLInput" placeholder="URL"> <input type="text" ng-model="trainingVideo.video.caption" size="100" name="videoCaptionInput" placeholder="Caption"><br><br> Collections: <select name="itemCollectionSelect" ng-model="curCollectionId" ng-options="collection._id as collection.name for collection in trainingVideoCollections"></select><br> <ul> <div ng-repeat="collectionID in trainingVideo.collectionIds"> <li>{{collectionID}}</li> <button ng-click="removeCollection()">Remove</button> </div> </ul> <button ng-click="addCollection()">Add Collection</button><br><br> <button class="btn btn-large btn-default" ng-click="reset()">Reset Form</button> <button class="btn btn-large btn-success" ng-click="save()" ng-disabled="trainingVideoForm.$invalid || !trainingVideoSanityCheck()">Save Entry</button> </form> <pre>\n    {{trainingVideo | json}}\n  </pre> </div>'),a.put("views/viewallrecipes.html",'<div> <div ng-repeat="recipe in recipes"> <b>{{recipe.name}} </b> <button ng-if="!isExpandedArr[$index]" ng-click="toggleRecipeExpansion($index)" class="btn btn-info btn-sm">Expand Recipe</button><br><br> <button ng-if="isExpandedArr[$index]" class="btn btn-warning btn-sm" ng-click="toggleRecipeExpansion($index)">Minimize Recipe</button><br><br> <div ng-if="isExpandedArr[$index]"> <em>Description: </em> <p>{{recipe.description}}</p> <em>Prep Time</em> <p>{{recipe.prepTime}}</p> <em>Total Time</em> <p>{{recipe.totalTime}}</p> <em>RecipeType: </em> <p>{{recipe.recipeType}}</p> <em>RecipeCategory: </em> <p>{{recipe.recipeCategory}}</p> <em>Primary Cooking Method</em> <p>{{recipe.primaryCookingMethod}}</p> <em>Other Cooking Methods</em> <span ng-repeat="method in recipe.otherCookingMethods">{{method}} -- </span><br> <em>Can Add Seasoning: </em> <p>{{recipe.canAddSeasoningProfile}}</p> <em ng-if="recipe.defaultSeasoningProfile">Default Seasoning: </em> <p ng-if="recipe.defaultSeasoningProfile">{{recipe.defaultSeasoningProfile}}</p> <b>Ingredient List</b><br> <em>Ingredient Types:</em><br> <div ng-repeat="type in recipe.ingredientList.ingredientTypes"> <p>TypeName: {{type.typeName}}</p> <p>MinNeeded: {{type.minNeeded}}</p> <p>Ingredients: </p> <div ng-repeat="ingredient in type.ingredients"> <p>Name: {{ingredient.name}}</p> <p>IngredientForms:</p> <span ng-repeat="form in ingredient.ingredientForms">{{form.name}} -- </span> </div> </div> <em>Equipment Needed</em> <div ng-repeat="dish in equimentNeeded"> <span>{{dish.name}} -- </span> </div> <em>Step List</em><br> <div ng-repeat="step in recipe.stepList"> {{$index}}. <pre>{{step | json}}</pre> </div> </div> </div> </div>')}]);